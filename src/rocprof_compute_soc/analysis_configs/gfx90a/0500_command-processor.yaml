---
# Add description/tips for each metric in this section.
# So it could be shown in hover.
Metric Description:
  Command Processor Fetcher:
    CPF Utilization: &CPF_Utilization_desc >-
      Percent of total cycles where the CPF was busy actively doing any work. The ratio of CPF busy
      cycles over total cycles counted by the CPF.
    CPF Stall: &CPF_Stall_desc >-
      Percent of CPF busy cycles where the CPF was stalled for any reason.
    CPF-L2 Utilization: &CPF-L2_Utilization_desc >-
      Percent of total cycles counted by the CPF-L2 interface where the CPF-L2 interface was active
      doing any work. The ratio of CPF-L2 busy cycles over total cycles counted by the CPF-L2.
    CPF-L2 Stall: &CPF-L2_Stall_desc >-
      Percent of CPF-L2 busy cycles where the CPF-L2 interface was stalled for any reason.
    CPF-UTCL1 Stall: &CPF-UTCL1_Stall_desc >-
      Percent of CPF busy cycles where the CPF was stalled by address translation.
  Packet Processor:
    CPC Utilization: &CPC_Utilization_desc >-
      Percent of total cycles where the CPC was busy actively doing any work. The ratio of CPC busy
      cycles over total cycles counted by the CPC.
    CPC Stall Rate: &CPC_Stall_Rate_desc >-
      Percent of CPC busy cycles where the CPC was stalled for any reason.
    CPC Packet Decoding Utilization: &CPC_Packet_Decoding_Utilization_desc >-
      Percent of CPC busy cycles spent decoding commands for processing.
    CPC-Workgroup Manager Utilization: &CPC-Workgroup_Manager_Utilization_desc >-
      Percent of CPC busy cycles spent dispatching workgroups to the workgroup manager.
    CPC-L2 Utilization: &CPC-L2_Utilization_desc >-
      Percent of total cycles counted by the CPC-L2 interface where the CPC-L2 interface was active
      doing any work.
    CPC-UTCL1 Stall: &CPC-UTCL1_Stall_desc >-
      Percent of CPC busy cycles where the CPC was stalled by address translation.
    CPC-UTCL2 Utilization: &CPC-UTCL2_Utilization_desc >-
      Percent of total cycles counted by the CPC's L2 address translation interface where the CPC
      was busy doing address translation work.

# Define the panel properties and properties of each metric in the panel.
Panel Config:
  id: 500
  title: Command Processor (CPC/CPF)
  data source:
    - metric_table:
        id: 501
        title: Command Processor Fetcher
        header:
          metric: Metric
          avg: Avg
          min: Min
          max: Max
          unit: Unit
          tips: Tips
        metric:
          CPF Utilization:
            avg: AVG((((100 * CPF_CPF_STAT_BUSY) / (CPF_CPF_STAT_BUSY + CPF_CPF_STAT_IDLE))
              if ((CPF_CPF_STAT_BUSY + CPF_CPF_STAT_IDLE) != 0) else None))
            min: MIN((((100 * CPF_CPF_STAT_BUSY) / (CPF_CPF_STAT_BUSY + CPF_CPF_STAT_IDLE))
              if ((CPF_CPF_STAT_BUSY + CPF_CPF_STAT_IDLE) != 0) else None))
            max: MAX((((100 * CPF_CPF_STAT_BUSY) / (CPF_CPF_STAT_BUSY + CPF_CPF_STAT_IDLE))
              if ((CPF_CPF_STAT_BUSY + CPF_CPF_STAT_IDLE) != 0) else None))
            unit: pct
            tips: *CPF_Utilization_desc
          CPF Stall:
            avg: AVG((((100 * CPF_CPF_STAT_STALL) / CPF_CPF_STAT_BUSY) if (CPF_CPF_STAT_BUSY
              != 0) else None))
            min: MIN((((100 * CPF_CPF_STAT_STALL) / CPF_CPF_STAT_BUSY) if (CPF_CPF_STAT_BUSY
              != 0) else None))
            max: MAX((((100 * CPF_CPF_STAT_STALL) / CPF_CPF_STAT_BUSY) if (CPF_CPF_STAT_BUSY
              != 0) else None))
            unit: pct
            tips: *CPF_Stall_desc
          CPF-L2 Utilization:
            avg: AVG((((100 * CPF_CPF_TCIU_BUSY) / (CPF_CPF_TCIU_BUSY + CPF_CPF_TCIU_IDLE))
              if ((CPF_CPF_TCIU_BUSY + CPF_CPF_TCIU_IDLE) != 0) else None))
            min: MIN((((100 * CPF_CPF_TCIU_BUSY) / (CPF_CPF_TCIU_BUSY + CPF_CPF_TCIU_IDLE))
              if ((CPF_CPF_TCIU_BUSY + CPF_CPF_TCIU_IDLE) != 0) else None))
            max: MAX((((100 * CPF_CPF_TCIU_BUSY) / (CPF_CPF_TCIU_BUSY + CPF_CPF_TCIU_IDLE))
              if ((CPF_CPF_TCIU_BUSY + CPF_CPF_TCIU_IDLE) != 0) else None))
            unit: pct
            tips: *CPF-L2_Utilization_desc
          CPF-L2 Stall:
            avg: AVG((((100 * CPF_CPF_TCIU_STALL) / CPF_CPF_TCIU_BUSY) if (CPF_CPF_TCIU_BUSY
              != 0) else None))
            min: MIN((((100 * CPF_CPF_TCIU_STALL) / CPF_CPF_TCIU_BUSY) if (CPF_CPF_TCIU_BUSY
              != 0) else None))
            max: MAX((((100 * CPF_CPF_TCIU_STALL) / CPF_CPF_TCIU_BUSY) if (CPF_CPF_TCIU_BUSY
              != 0) else None))
            unit: pct
            tips: *CPF-L2_Stall_desc
          CPF-UTCL1 Stall:
            avg: AVG(((100 * CPF_CMP_UTCL1_STALL_ON_TRANSLATION) / CPF_CPF_STAT_BUSY) if (CPF_CPF_STAT_BUSY
              != 0) else None)
            min: MIN(((100 * CPF_CMP_UTCL1_STALL_ON_TRANSLATION) / CPF_CPF_STAT_BUSY) if (CPF_CPF_STAT_BUSY
              != 0) else None)
            max: MAX(((100 * CPF_CMP_UTCL1_STALL_ON_TRANSLATION) / CPF_CPF_STAT_BUSY) if (CPF_CPF_STAT_BUSY
              != 0) else None)
            unit: pct
            tips: *CPF-UTCL1_Stall_desc

    - metric_table:
        id: 502
        title: Packet Processor
        header:
          metric: Metric
          avg: Avg
          min: Min
          max: Max
          unit: Unit
          tips: Tips
        metric:
          CPC Utilization:
            avg: AVG((((100 * CPC_CPC_STAT_BUSY) / (CPC_CPC_STAT_BUSY + CPC_CPC_STAT_IDLE))
              if ((CPC_CPC_STAT_BUSY + CPC_CPC_STAT_IDLE) != 0) else None))
            min: MIN((((100 * CPC_CPC_STAT_BUSY) / (CPC_CPC_STAT_BUSY + CPC_CPC_STAT_IDLE))
              if ((CPC_CPC_STAT_BUSY + CPC_CPC_STAT_IDLE) != 0) else None))
            max: MAX((((100 * CPC_CPC_STAT_BUSY) / (CPC_CPC_STAT_BUSY + CPC_CPC_STAT_IDLE))
              if ((CPC_CPC_STAT_BUSY + CPC_CPC_STAT_IDLE) != 0) else None))
            unit: pct
            tips: *CPC_Utilization_desc
          CPC Stall Rate:
            avg: AVG((((100 * CPC_CPC_STAT_STALL) / CPC_CPC_STAT_BUSY) if (CPC_CPC_STAT_BUSY
              != 0) else None))
            min: MIN((((100 * CPC_CPC_STAT_STALL) / CPC_CPC_STAT_BUSY) if (CPC_CPC_STAT_BUSY
              != 0) else None))
            max: MAX((((100 * CPC_CPC_STAT_STALL) / CPC_CPC_STAT_BUSY) if (CPC_CPC_STAT_BUSY
              != 0) else None))
            unit: pct
            tips: *CPC_Stall_Rate_desc
          CPC Packet Decoding Utilization:
            avg: AVG((100 * CPC_ME1_BUSY_FOR_PACKET_DECODE) / CPC_CPC_STAT_BUSY if (CPC_CPC_STAT_BUSY != 0) else None)
            min: MIN((100 * CPC_ME1_BUSY_FOR_PACKET_DECODE) / CPC_CPC_STAT_BUSY if (CPC_CPC_STAT_BUSY != 0) else None)
            max: MAX((100 * CPC_ME1_BUSY_FOR_PACKET_DECODE) / CPC_CPC_STAT_BUSY if (CPC_CPC_STAT_BUSY != 0) else None)
            unit: pct
            tips: *CPC_Packet_Decoding_Utilization_desc
          CPC-Workgroup Manager Utilization:
            avg: AVG((100 * CPC_ME1_DC0_SPI_BUSY) / CPC_CPC_STAT_BUSY if (CPC_CPC_STAT_BUSY != 0) else None)
            min: MIN((100 * CPC_ME1_DC0_SPI_BUSY) / CPC_CPC_STAT_BUSY if (CPC_CPC_STAT_BUSY != 0) else None)
            max: MAX((100 * CPC_ME1_DC0_SPI_BUSY) / CPC_CPC_STAT_BUSY if (CPC_CPC_STAT_BUSY != 0) else None)
            unit: Pct
            tips: *CPC-Workgroup_Manager_Utilization_desc
          CPC-L2 Utilization:
            avg: AVG((((100 * CPC_CPC_TCIU_BUSY) / (CPC_CPC_TCIU_BUSY + CPC_CPC_TCIU_IDLE))
              if ((CPC_CPC_TCIU_BUSY + CPC_CPC_TCIU_IDLE) != 0) else None))
            min: MIN((((100 * CPC_CPC_TCIU_BUSY) / (CPC_CPC_TCIU_BUSY + CPC_CPC_TCIU_IDLE))
              if ((CPC_CPC_TCIU_BUSY + CPC_CPC_TCIU_IDLE) != 0) else None))
            max: MAX((((100 * CPC_CPC_TCIU_BUSY) / (CPC_CPC_TCIU_BUSY + CPC_CPC_TCIU_IDLE))
              if ((CPC_CPC_TCIU_BUSY + CPC_CPC_TCIU_IDLE) != 0) else None))
            unit: pct
            tips: *CPC-L2_Utilization_desc
          CPC-UTCL1 Stall:
            avg: AVG(((100 * CPC_UTCL1_STALL_ON_TRANSLATION) / CPC_CPC_STAT_BUSY) if (CPC_CPC_STAT_BUSY
              != 0) else None)
            min: MIN(((100 * CPC_UTCL1_STALL_ON_TRANSLATION) / CPC_CPC_STAT_BUSY) if (CPC_CPC_STAT_BUSY
              != 0) else None)
            max: MAX(((100 * CPC_UTCL1_STALL_ON_TRANSLATION) / CPC_CPC_STAT_BUSY) if (CPC_CPC_STAT_BUSY
              != 0) else None)
            unit: pct
            tips: *CPC-UTCL1_Stall_desc
          CPC-UTCL2 Utilization:
            avg: AVG((((100 * CPC_CPC_UTCL2IU_BUSY) / (CPC_CPC_UTCL2IU_BUSY + CPC_CPC_UTCL2IU_IDLE))
              if ((CPC_CPC_UTCL2IU_BUSY + CPC_CPC_UTCL2IU_IDLE) != 0) else None))
            min: MIN((((100 * CPC_CPC_UTCL2IU_BUSY) / (CPC_CPC_UTCL2IU_BUSY + CPC_CPC_UTCL2IU_IDLE))
              if ((CPC_CPC_UTCL2IU_BUSY + CPC_CPC_UTCL2IU_IDLE) != 0) else None))
            max: MAX((((100 * CPC_CPC_UTCL2IU_BUSY) / (CPC_CPC_UTCL2IU_BUSY + CPC_CPC_UTCL2IU_IDLE))
              if ((CPC_CPC_UTCL2IU_BUSY + CPC_CPC_UTCL2IU_IDLE) != 0) else None))
            unit: pct
            tips: *CPC-UTCL2_Utilization_desc
