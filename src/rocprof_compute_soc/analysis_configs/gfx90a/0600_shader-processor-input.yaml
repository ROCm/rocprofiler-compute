---
# Add description/tips for each metric in this section.
# So it could be shown in hover.
Metric Description:
  Workgroup Manager Utilizations:
    Accelerator Utilization: &Accelerator_Utilization_desc >-
      The percent of cycles in the kernel where the accelerator was actively doing any work.
    Scheduler-Pipe Utilization: &Scheduler-Pipe_Utilization_desc >-
      The percent of total scheduler-pipe cycles in the kernel where the scheduler-pipes were
      actively doing any work. Note: this value is expected to range between 0% and 25%.
    Workgroup Manager Utilization: &Workgroup_Manager_Utilization_desc >-
      The percent of cycles in the kernel where the workgroup manager was actively doing any work.
    Shader Engine Utilization: &Shader_Engine_Utilization_desc >-
      The percent of total shader engine cycles in the kernel where any CU in a shader-engine was
      actively doing any work, normalized over all shader-engines. Low values (e.g., << 100%)
      indicate that the accelerator was not fully saturated by the kernel, or a potential
      load-imbalance issue.
    SIMD Utilization: &SIMD_Utilization_desc >-
      The percent of total SIMD cycles in the kernel where any SIMD on a CU was actively doing any
      work, summed over all CUs. Low values (less than 100%) indicate that the accelerator was not
      fully saturated by the kernel, or a potential load-imbalance issue.
    Dispatched Workgroups: &Dispatched_Workgroups_desc >-
      The total number of workgroups forming this kernel launch.
    Dispatched Wavefronts: &Dispatched_Wavefronts_desc >-
      The total number of wavefronts, summed over all workgroups, forming this kernel launch.
    VGPR Writes: &VGPR_Writes_desc >-
      The average number of cycles spent initializing VGPRs at wave creation.
    SGPR Writes: &SGPR_Writes_desc >-
      The average number of cycles spent initializing SGPRs at wave creation.
  Workgroup Manager - Resource Allocation:
    Not-Scheduled Rate (Workgroup Manager): &Not-Scheduled_Rate_Workgroup_Manager_desc >-
      The percent of total scheduler-pipe cycles in the kernel where a workgroup could not be
      scheduled to a CU due to a bottleneck within the workgroup manager rather than a lack of a CU
      or SIMD with sufficient resources. Note: this value is expected to range between 0-25%. See
      note in workgroup manager description.
    Not-Scheduled Rate (Scheduler-Pipe): &Not-Scheduled_Rate_Scheduler-Pipe_desc >-
      The percent of total scheduler-pipe cycles in the kernel where a workgroup could not be
      scheduled to a CU due to a bottleneck within the scheduler-pipes rather than a lack of a CU or
      SIMD with sufficient resources. Note: this value is expected to range between 0-25%, see note
      in workgroup manager description.
    Scheduler-Pipe Stall Rate: &Scheduler-Pipe_Stall_Rate_desc >-
      The percent of total scheduler-pipe cycles in the kernel where a workgroup could not be
      scheduled to a CU due to occupancy limitations (like a lack of a CU or SIMD with sufficient
      resources). Note: this value is expected to range between 0-25%, see note in workgroup manager
      description.
    Scratch Stall Rate: &Scratch_Stall_Rate_desc >-
      The percent of total shader-engine cycles in the kernel where a workgroup could not be
      scheduled to a CU due to lack of private (a.k.a., scratch) memory slots. While this can reach
      up to 100%, note that the actual occupancy limitations on a kernel using private memory are
      typically quite small (for example, less than 1% of the total number of waves that can be
      scheduled to an accelerator).
    Insufficient SIMD Waveslots: &Insufficient_SIMD_Waveslots_desc >-
      The percent of total SIMD cycles in the kernel where a workgroup could not be scheduled to a
      SIMD due to lack of available waveslots.
    Insufficient SIMD VGPRs: &Insufficient_SIMD_VGPRs_desc >-
      The percent of total SIMD cycles in the kernel where a workgroup could not be scheduled to a
      SIMD due to lack of available VGPRs.
    Insufficient SIMD SGPRs: &Insufficient_SIMD_SGPRs_desc >-
      The percent of total SIMD cycles in the kernel where a workgroup could not be scheduled to a
      SIMD due to lack of available SGPRs.
    Insufficient CU LDS: &Insufficient_CU_LDS_desc >-
      The percent of total CU cycles in the kernel where a workgroup could not be scheduled to a CU
      due to lack of available LDS.
    Insufficient CU Barriers: &Insufficient_CU_Barriers_desc >-
      The percent of total CU cycles in the kernel where a workgroup could not be scheduled to a CU
      due to lack of available barriers.
    Reached CU Workgroup Limit: &Reached_CU_Workgroup_Limit_desc >-
      The percent of total CU cycles in the kernel where a workgroup could not be scheduled to a CU
      due to limits within the workgroup manager. This is expected to be always be zero on CDNA2 or
      newer accelerators (and small for previous accelerators).
    Reached CU Wavefront Limit: &Reached_CU_Wavefront_Limit_desc >-
      The percent of total CU cycles in the kernel where a wavefront could not be scheduled to a CU
      due to limits within the workgroup manager. This is expected to be always be zero on CDNA2 or
      newer accelerators (and small for previous accelerators).

# Define the panel properties and properties of each metric in the panel.
Panel Config:
  id: 600
  title: Workgroup Manager (SPI)
  data source:
    - metric_table:
        id: 601
        title: Workgroup Manager Utilizations
        header:
          metric: Metric
          avg: Avg
          min: Min
          max: Max
          unit: Unit
          tips: Tips
        metric:
          Accelerator Utilization:
            avg: AVG(100 * $GRBM_GUI_ACTIVE_PER_XCD / $GRBM_COUNT_PER_XCD)
            min: MIN(100 * $GRBM_GUI_ACTIVE_PER_XCD / $GRBM_COUNT_PER_XCD)
            max: MAX(100 * $GRBM_GUI_ACTIVE_PER_XCD / $GRBM_COUNT_PER_XCD)
            unit: Pct
            tips: *Accelerator_Utilization_desc
          Scheduler-Pipe Utilization:
            avg: AVG(100 * SPI_CSN_BUSY / ($GRBM_GUI_ACTIVE_PER_XCD * $pipes_per_gpu * $se_per_gpu))
            min: MIN(100 * SPI_CSN_BUSY / ($GRBM_GUI_ACTIVE_PER_XCD * $pipes_per_gpu * $se_per_gpu))
            max: MAX(100 * SPI_CSN_BUSY / ($GRBM_GUI_ACTIVE_PER_XCD * $pipes_per_gpu * $se_per_gpu))
            unit: Pct
            tips: *Scheduler-Pipe_Utilization_desc
          Workgroup Manager Utilization:
            avg: AVG(100 * $GRBM_SPI_BUSY_PER_XCD / $GRBM_GUI_ACTIVE_PER_XCD)
            min: MIN(100 * $GRBM_SPI_BUSY_PER_XCD / $GRBM_GUI_ACTIVE_PER_XCD)
            max: MAX(100 * $GRBM_SPI_BUSY_PER_XCD / $GRBM_GUI_ACTIVE_PER_XCD)
            unit: Pct
            tips: *Workgroup_Manager_Utilization_desc
          Shader Engine Utilization:
            avg: AVG(100 * SQ_BUSY_CYCLES / ($GRBM_GUI_ACTIVE_PER_XCD * $se_per_gpu))
            min: MIN(100 * SQ_BUSY_CYCLES / ($GRBM_GUI_ACTIVE_PER_XCD * $se_per_gpu))
            max: MAX(100 * SQ_BUSY_CYCLES / ($GRBM_GUI_ACTIVE_PER_XCD * $se_per_gpu))
            unit: Pct
            tips: *Shader_Engine_Utilization_desc
          SIMD Utilization:
            avg: AVG(100 * SQ_BUSY_CU_CYCLES / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            min: MIN(100 * SQ_BUSY_CU_CYCLES / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            max: MAX(100 * SQ_BUSY_CU_CYCLES / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            unit: Pct
            tips: *SIMD_Utilization_desc
          Dispatched Workgroups:
            avg: AVG(SPI_CSN_NUM_THREADGROUPS)
            min: MIN(SPI_CSN_NUM_THREADGROUPS)
            max: MAX(SPI_CSN_NUM_THREADGROUPS)
            unit: Workgroups
            tips: *Dispatched_Workgroups_desc
          Dispatched Wavefronts:
            avg: AVG(SPI_CSN_WAVE)
            min: MIN(SPI_CSN_WAVE)
            max: MAX(SPI_CSN_WAVE)
            unit: Wavefronts
            tips: *Dispatched_Wavefronts_desc
          VGPR Writes:
            avg: AVG((((4 * SPI_VWC_CSC_WR) / SPI_CSN_WAVE) if (SPI_CSN_WAVE != 0) else
              None))
            min: MIN((((4 * SPI_VWC_CSC_WR) / SPI_CSN_WAVE) if (SPI_CSN_WAVE != 0) else
              None))
            max: MAX((((4 * SPI_VWC_CSC_WR) / SPI_CSN_WAVE) if (SPI_CSN_WAVE != 0) else
              None))
            unit: Cycles/wave
            tips: *VGPR_Writes_desc
          SGPR Writes:
            avg: AVG((((1 * SPI_SWC_CSC_WR) / SPI_CSN_WAVE) if (SPI_CSN_WAVE != 0) else
              None))
            min: MIN((((1 * SPI_SWC_CSC_WR) / SPI_CSN_WAVE) if (SPI_CSN_WAVE != 0) else
              None))
            max: MAX((((1 * SPI_SWC_CSC_WR) / SPI_CSN_WAVE) if (SPI_CSN_WAVE != 0) else
              None))
            unit: Cycles/wave
            tips: *SGPR_Writes_desc
    - metric_table:
        id: 602
        title: Workgroup Manager - Resource Allocation
        header:
          metric: Metric
          avg: Avg
          min: Min
          max: Max
          unit: Unit
          tips: Tips
        metric:
          Not-scheduled Rate (Workgroup Manager):
            avg: AVG((100 * SPI_RA_REQ_NO_ALLOC_CSN / ($GRBM_SPI_BUSY_PER_XCD * $se_per_gpu)) if ($GRBM_SPI_BUSY_PER_XCD !=
              0) else None)
            min: MIN((100 * SPI_RA_REQ_NO_ALLOC_CSN / ($GRBM_SPI_BUSY_PER_XCD * $se_per_gpu)) if ($GRBM_SPI_BUSY_PER_XCD !=
              0) else None)
            max: MAX((100 * SPI_RA_REQ_NO_ALLOC_CSN / ($GRBM_SPI_BUSY_PER_XCD * $se_per_gpu)) if ($GRBM_SPI_BUSY_PER_XCD !=
              0) else None)
            unit: Pct
            tips: *Not-Scheduled_Rate_Workgroup_Manager_desc
          Not-scheduled Rate (Scheduler-Pipe):
            avg: AVG((100 * SPI_RA_REQ_NO_ALLOC / ($GRBM_SPI_BUSY_PER_XCD * $se_per_gpu)) if ($GRBM_SPI_BUSY_PER_XCD !=
              0) else None)
            min: MIN((100 * SPI_RA_REQ_NO_ALLOC / ($GRBM_SPI_BUSY_PER_XCD * $se_per_gpu)) if ($GRBM_SPI_BUSY_PER_XCD !=
              0) else None)
            max: MAX((100 * SPI_RA_REQ_NO_ALLOC / ($GRBM_SPI_BUSY_PER_XCD * $se_per_gpu)) if ($GRBM_SPI_BUSY_PER_XCD !=
              0) else None)
            unit: Pct
            tips: *Not-Scheduled_Rate_Scheduler-Pipe_desc
          Scheduler-Pipe Stall Rate:
            avg: AVG((((100 * SPI_RA_RES_STALL_CSN) / ($GRBM_SPI_BUSY_PER_XCD * $se_per_gpu)) if ($GRBM_SPI_BUSY_PER_XCD !=
              0) else None))
            min: MIN((((100 * SPI_RA_RES_STALL_CSN) / ($GRBM_SPI_BUSY_PER_XCD * $se_per_gpu)) if ($GRBM_SPI_BUSY_PER_XCD !=
              0) else None))
            max: MAX((((100 * SPI_RA_RES_STALL_CSN) / ($GRBM_SPI_BUSY_PER_XCD * $se_per_gpu)) if ($GRBM_SPI_BUSY_PER_XCD !=
              0) else None))
            unit: Pct
            tips: *Scheduler-Pipe_Stall_Rate_desc
          Scratch Stall Rate:
            avg: AVG((100 * SPI_RA_TMP_STALL_CSN / ($GRBM_SPI_BUSY_PER_XCD * $se_per_gpu)) if ($GRBM_SPI_BUSY_PER_XCD != 0) else None)
            min: MIN((100 * SPI_RA_TMP_STALL_CSN / ($GRBM_SPI_BUSY_PER_XCD * $se_per_gpu)) if ($GRBM_SPI_BUSY_PER_XCD != 0) else None)
            max: MAX((100 * SPI_RA_TMP_STALL_CSN / ($GRBM_SPI_BUSY_PER_XCD * $se_per_gpu)) if ($GRBM_SPI_BUSY_PER_XCD != 0) else None)
            unit: Pct
            tips: *Scratch_Stall_Rate_desc
          Insufficient SIMD Waveslots:
            avg: AVG(100 * SPI_RA_WAVE_SIMD_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            min: MIN(100 * SPI_RA_WAVE_SIMD_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            max: MAX(100 * SPI_RA_WAVE_SIMD_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            unit: Pct
            tips: *Insufficient_SIMD_Waveslots_desc
          Insufficient SIMD VGPRs:
            avg: AVG(100 * SPI_RA_VGPR_SIMD_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            min: MIN(100 * SPI_RA_VGPR_SIMD_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            max: MAX(100 * SPI_RA_VGPR_SIMD_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            unit: Pct
            tips: *Insufficient_SIMD_VGPRs_desc
          Insufficient SIMD SGPRs:
            avg: AVG(100 * SPI_RA_SGPR_SIMD_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            min: MIN(100 * SPI_RA_SGPR_SIMD_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            max: MAX(100 * SPI_RA_SGPR_SIMD_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            unit: Pct
            tips: *Insufficient_SIMD_SGPRs_desc
          Insufficient CU LDS:
            avg: AVG(400 * SPI_RA_LDS_CU_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            min: MIN(400 * SPI_RA_LDS_CU_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            max: MAX(400 * SPI_RA_LDS_CU_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            unit: Pct
            tips: *Insufficient_CU_LDS_desc
          Insufficient CU Barriers:
            avg: AVG(400 * SPI_RA_BAR_CU_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            min: MIN(400 * SPI_RA_BAR_CU_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            max: MAX(400 * SPI_RA_BAR_CU_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            unit: Pct
            tips: *Insufficient_CU_Barriers_desc
          Reached CU Workgroup Limit:
            avg: AVG(400 * SPI_RA_TGLIM_CU_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            min: MIN(400 * SPI_RA_TGLIM_CU_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            max: MAX(400 * SPI_RA_TGLIM_CU_FULL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            unit: Pct
            tips: *Reached_CU_Workgroup_Limit_desc
          Reached CU Wavefront Limit:
            avg: AVG(400 * SPI_RA_WVLIM_STALL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            min: MIN(400 * SPI_RA_WVLIM_STALL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            max: MAX(400 * SPI_RA_WVLIM_STALL_CSN / ($GRBM_GUI_ACTIVE_PER_XCD * $cu_per_gpu))
            unit: Pct
            tips: *Reached_CU_Wavefront_Limit_desc
