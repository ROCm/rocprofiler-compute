---
# Add description/tips for each metric in this section.
# So it could be shown in hover.
Metric Description:
  Speed-of-Light:
    Bandwidth: &SoL_Bandwidth_desc >-
      The number of bytes looked up in the L1I cache, as a percent of the peak theoretical
      bandwidth. Calculated as the ratio of L1I requests over the total L1I cycles.
    Cache Hit Rate: &SoL_Cache_Hit_Rate_desc >-
      The percent of L1I requests that hit on a previously loaded line the cache. Calculated as the
      ratio of the number of L1I requests that hit over the number of all L1I requests.
    L1I-L2 Bandwidth: &SoL_L1I-L2_Bandwidth_desc >-
      The percent of the peak theoretical L1I â†’ L2 cache request bandwidth achieved. Calculated as
      the ratio of the total number of requests from the L1I to the L2 cache over the total L1I-L2
      interface cycles.
  Instruction Cache Accesses:
    Requests: &Requests_desc >-
      The total number of requests made to the L1I per normalization unit.
    Hits: &Hits_desc >-
      The total number of L1I requests that hit on a previously loaded cache line, per normalization
      unit.
    Misses - Non-Duplicated: &Misses_Non-Duplicated_desc >-
      The total number of L1I requests that missed on a cache line that were not already pending due
      to another request, per normalization unit.
    Misses - Duplicated: &Misses_Duplicated_desc >-
      The total number of L1I requests that missed on a cache line that were already pending due to
      another request, per normalization-unit.
    Cache Hit Rate: &Cache_Hit_Rate_desc >-
      The percent of L1I requests that hit on a previously loaded line the cache. Calculated as the
      ratio of the number of L1I requests that hit over the number of all L1I requests.
    Instruction Fetch Latency: &Instruction_Fetch_Latency_desc >-
      The average number of cycles spent to fetch instructions to a CU.
  Instruction Cache - L2 Interface:
    L1I-L2 Bandwidth: &L1I-L2_Bandwidth_desc >-
      The total number of bytes read across the L1I-L2 interface, per normalization unit.

# Define the panel properties and properties of each metric in the panel.
Panel Config:
  id: 1300
  title: Instruction Cache
  data source:
    - metric_table:
        id: 1301
        title: Speed-of-Light
        header:
          metric: Metric
          value: Avg
          unit: Unit
          tips: Tips
        metric:
          Bandwidth:
            value: AVG(((SQC_ICACHE_REQ * 100000) / (($max_sclk * $sqc_per_gpu)
              * (End_Timestamp - Start_Timestamp))))
            unit: Pct of Peak
            tips: *SoL_Bandwidth_desc
          Cache Hit Rate:
            value: AVG(((SQC_ICACHE_HITS * 100) / ((SQC_ICACHE_HITS + SQC_ICACHE_MISSES)
              + SQC_ICACHE_MISSES_DUPLICATE)))
            unit: Pct of Peak
            tips: *SoL_Cache_Hit_Rate_desc
          L1I-L2 Bandwidth:
            value: AVG(((SQC_TC_INST_REQ * 100000) / (2 * ($max_sclk * $sqc_per_gpu)
              * (End_Timestamp - Start_Timestamp))))
            unit: Pct of Peak
            tips: *SoL_L1I-L2_Bandwidth_desc
        comparable: false # for now
        cli_style: simple_bar

    - metric_table:
        id: 1302
        title: Instruction Cache Accesses
        header:
          metric: Metric
          avg: Avg
          min: Min
          max: Max
          unit: Unit
          tips: Tips
        metric:
          Req:
            avg: AVG((SQC_ICACHE_REQ / $denom))
            min: MIN((SQC_ICACHE_REQ / $denom))
            max: MAX((SQC_ICACHE_REQ / $denom))
            unit: (Req  + $normUnit)
            tips: *Requests_desc
          Hits:
            avg: AVG((SQC_ICACHE_HITS / $denom))
            min: MIN((SQC_ICACHE_HITS / $denom))
            max: MAX((SQC_ICACHE_HITS / $denom))
            unit: (Hits  + $normUnit)
            tips: *Hits_desc
          Misses - Non Duplicated:
            avg: AVG((SQC_ICACHE_MISSES / $denom))
            min: MIN((SQC_ICACHE_MISSES / $denom))
            max: MAX((SQC_ICACHE_MISSES / $denom))
            unit: (Misses  + $normUnit)
            tips: *Misses_Non-Duplicated_desc
          Misses - Duplicated:
            avg: AVG((SQC_ICACHE_MISSES_DUPLICATE / $denom))
            min: MIN((SQC_ICACHE_MISSES_DUPLICATE / $denom))
            max: MAX((SQC_ICACHE_MISSES_DUPLICATE / $denom))
            unit: (Misses  + $normUnit)
            tips: *Misses_Duplicated_desc
          Cache Hit Rate:
            avg: AVG(((100 * SQC_ICACHE_HITS) / ((SQC_ICACHE_HITS + SQC_ICACHE_MISSES)
              + SQC_ICACHE_MISSES_DUPLICATE)))
            min: MIN(((100 * SQC_ICACHE_HITS) / ((SQC_ICACHE_HITS + SQC_ICACHE_MISSES)
              + SQC_ICACHE_MISSES_DUPLICATE)))
            max: MAX(((100 * SQC_ICACHE_HITS) / ((SQC_ICACHE_HITS + SQC_ICACHE_MISSES)
              + SQC_ICACHE_MISSES_DUPLICATE)))
            unit: pct
            tips: *Cache_Hit_Rate_desc
          Instruction Fetch Latency:
            avg: AVG((SQ_ACCUM_PREV_HIRES / SQ_IFETCH))
            min: MIN((SQ_ACCUM_PREV_HIRES / SQ_IFETCH))
            max: MAX((SQ_ACCUM_PREV_HIRES / SQ_IFETCH))
            unit: Cycles
            coll_level: SQ_IFETCH_LEVEL
            tips: *Instruction_Fetch_Latency_desc
    - metric_table:
        id: 1303
        title: Instruction Cache - L2 Interface
        header:
          metric: Metric
          avg: Avg
          min: Min
          max: Max
          unit: Unit
          tips: Tips
        metric:
          L1I-L2 Bandwidth:
            avg: AVG(((SQC_TC_INST_REQ * 64) / $denom))
            min: MIN(((SQC_TC_INST_REQ * 64) / $denom))
            max: MAX(((SQC_TC_INST_REQ * 64) / $denom))
            unit: (Bytes + $normUnit)
            tips: *L1I-L2_Bandwidth_desc
